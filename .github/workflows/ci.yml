name: Node.js CI

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x','20.x']

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci
      
      - name: Build
        run: npm run build --if-present
      
      - name: Test
        run: npm test

# Descripción del Workflow:
# Este workflow se ejecutará en respuesta a eventos de pull request y push en la rama main.
# Se configura para probar tu código en diferentes versiones de Node.js (18.x y 20.x) y asegurar compatibilidad entre ellas.
#
# Características clave:
#   1. Disparadores (`on`):
#     - `pull_request`: Se activa cuando alguien hace un pull request hacia main
#     - `push`: También se ejecuta al hacer push directo a main como medida de seguridad adicional
#
#   2. Matriz de versiones (`matrix`):
#     - Prueba tu código con múltiples versiones de Node.js (18.x y 20.x)
#     - Asegura compatibilidad entre diferentes versiones
#
#   3. Caché de dependencias:
#     - Almacena `node_modules` para acelerar futuras ejecuciones
#     - La clave del caché se basa en el contenido de package-lock.json